---
- name: "Disabling IPV6 on the server"
  ansible.builtin.replace:
    path: "/etc/default/grub"
    regexp: '^GRUB_CMDLINE_LINUX="(.*)(?<! ipv6\.disable=1)"$'
    replace: 'GRUB_CMDLINE_LINUX="\1 ipv6.disable=1"'
  register: "output"
  notify: "Update Grub"

- name: "Copying the disable IPV6 config file to the server"
  ansible.builtin.copy:
    src: "disable-ipv6.conf"
    dest: "/etc/sysctl.d/"
    mode: "preserve"
  register: "output"

- name: "Removing all IPV6 references from the /etc/hosts file"
  ansible.builtin.replace:
    path: "/etc/hosts"
    regexp: '^([^#\n]*[:]{2}.*)$'
    replace: '#\1'

- name: "Populating the service facts"
  ansible.builtin.service_facts:
  when: output is defined and output.changed

- name: "Disabling IPV6 with network manager"
  ansible.builtin.command: "/bin/nmcli device modify {{ ansible_default_ipv4.interface }} ipv6.method 'disabled'"
  when:
    - output is defined
    - output.changed
    - ansible_facts.services["NetworkManager.service"] is defined and ansible_facts.services["NetworkManager.service"]['status'] == 'enabled'
  register: "output"
  changed_when: output.rc == 0
  notify: "Restart network"
