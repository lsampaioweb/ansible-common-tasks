---
- name: "Updating APT package cache"
  when: update_cache is defined
  ansible.builtin.apt:
    update_cache: "{{ update_cache | default(true) }}"

- name: "Upgrading all system packages to the latest version"
  when: upgrade is defined
  ansible.builtin.apt:
    upgrade: "{{ upgrade | default('full') }}"

- name: "Installing, upgrading, or removing specified packages"
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: "{{ item.state | default(omit) }}"
    update_cache: "{{ item.update_cache | default(omit) }}"
    upgrade: "{{ item.upgrade | default(omit) }}"
    install_recommends: "{{ item.install_recommends | default(omit) }}"
    clean: "{{ item.clean | default(omit) }}"
    autoclean: "{{ item.autoclean | default(omit) }}"
    autoremove: "{{ item.autoremove | default(omit) }}"
    purge: "{{ item.purge | default(omit) }}"
  notify: "{{ item.handler_to_notify | default(omit) }}"
  loop: "{{ packages | default([]) }}"
  register: "output"

- name: "Removing dependencies that are no longer required and unnecessary packages from the cache"
  when: (autoclean is defined) or (autoremove  is defined)
  ansible.builtin.apt:
    autoclean: "{{ autoclean | default(omit) }}"
    autoremove: "{{ autoremove | default(omit) }}"

- name: "Checking if a reboot is required after updates"
  when: reboot_allowed is defined and reboot_allowed | bool
  ansible.builtin.import_role:
    name: "common"
    tasks_from: "debian/os/reboot-if-required.yml"
