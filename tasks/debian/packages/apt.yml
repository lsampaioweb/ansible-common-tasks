---
- name: "Upgrading the packages"
  ansible.builtin.apt:
    update_cache: "{{ update_cache | default(true) }}"
    upgrade: "{{ upgrade | default('safe') }}"
  when: update_cache is defined or upgrade is defined

- name: "Apt packages"
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: "{{ item.state | default(omit) }}"
    upgrade: "{{ item.upgrade | default(omit) }}"
    update_cache: "{{ item.update_cache | default(omit) }}"
    install_recommends: "{{ item.install_recommends | default(omit) }}"
    clean: "{{ item.clean | default(omit) }}"
    autoclean: "{{ item.autoclean | default(omit) }}"
    autoremove: "{{ item.autoremove | default(omit) }}"
  loop: "{{ packages | default([]) }}"
  register: "output"

- name: "Manually upgrading any left over packages"
  ansible.builtin.shell: >-
    set -o pipefail && \
    sudo apt list -u -q 2>/dev/null | grep "/" | cut -d/ -f1 | xargs -n 1 sudo apt install -y
  args:
    executable: "/usr/bin/bash"
  register: "output"
  failed_when: false
  changed_when: output.rc == 0
  when: upgrade is defined and upgrade | bool
