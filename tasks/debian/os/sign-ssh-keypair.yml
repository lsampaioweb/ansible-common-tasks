---
- name: "Creating variables"
  ansible.builtin.set_fact:
    ca_host_private_key_path: "{{ ca_ssh_path }}/ca_host_key"
    ssh_path: "/etc/ssh"
    tmp_ssh_path: "/tmp/{{ inventory_hostname }}"
    ssh_key_types:
      - "rsa"
      - "ecdsa"
      - "ed25519"
  vars:
    ca_ssh_path: "/opt/certificates/ca.lan.homelab"

- name: "Fetching the SSH public keys from host"
  ansible.builtin.fetch:
    src: "{{ ssh_path }}/ssh_host_{{ item }}_key.pub"
    dest: "{{ tmp_ssh_path }}/"
    flat: true
  loop: "{{ ssh_key_types }}"

- name: "Signing the Host OpenSSH keypair with the CA key"
  delegate_to: "{{ groups['ssh_signer'] | first }}"
  community.crypto.openssh_cert:
    type: "host"
    signing_key: "{{ ca_host_private_key_path }}"
    public_key: "{{ tmp_ssh_path }}/ssh_host_{{ item }}_key.pub"
    path: "{{ tmp_ssh_path }}/ssh_host_{{ item }}_key-cert.pub"
    regenerate: "{{ item.regenerate | default('full_idempotence') }}"
    valid_from: "{{ item.valid_from | default('always') }}"
    valid_to: "{{ item.valid_to | default('forever') }}"
    principals: "{{ principals | default(omit) }}"
    state: "present"
  loop: "{{ ssh_key_types }}"
  vars:
    principals: ["{{ hostname }}", "{{ hostname }}.{{ domain }}"]

- name: "Copying the signed SSH keys back to host"
  ansible.builtin.copy:
    src: "{{ tmp_ssh_path }}/ssh_host_{{ item }}_key-cert.pub"
    dest: "{{ ssh_path }}/"
    mode: "preserve"
  loop: "{{ ssh_key_types }}"
  notify: "Restarting the SSH server"
