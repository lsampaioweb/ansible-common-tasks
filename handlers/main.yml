---
- name: "Update Grub"
  ansible.builtin.command: "update-grub"

- name: "Reconfigure Timezone"
  ansible.builtin.command: "dpkg-reconfigure --frontend noninteractive tzdata"

- name: "Restart Systemd-Timesyncd"
  ansible.builtin.service:
    name: "systemd-timesyncd"
    state: "restarted"

- name: "Restart Systemd-Resolved"
  ansible.builtin.service:
    name: "systemd-resolved"
    state: "restarted"

- name: "Restart xrdp"
  ansible.builtin.systemd:
    name: "xrdp"
    state: "restarted"
    enabled: true

- name: "Restart Bind9"
  ansible.builtin.systemd:
    name: "bind9"
    state: "restarted"
    enabled: true

- name: "HashiCorp Auto Completition"
  become: false
  ansible.builtin.command: "{{ item }}"
  register: "autocomplete_output"
  loop:
    - "packer -autocomplete-install"
    - "terraform -install-autocomplete"
  failed_when:
    - autocomplete_output.rc != 0
    - "'already installed' not in autocomplete_output.stderr"
  changed_when:
    - autocomplete_output.rc == 0

- name: "Reboot host"
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 120
    pre_reboot_delay: 0
    post_reboot_delay: 10
    test_command: "whoami"

- name: "Restart network"
  ansible.builtin.service:
    name: "networking"
    state: "restarted"
  poll: 0
  async: 10

- name: "Reload network"
  ansible.builtin.command: "ifreload -a"
  register: "output"

- name: "Wait for the network device to reload"
  ansible.builtin.wait_for_connection:
    delay: 1

- name: "Update CA Certificates"
  ansible.builtin.command: "update-ca-certificates"
  register: "output"

- name: "Update CA Certificates FreeBSD"
  ansible.builtin.command: "certctl rehash"
  register: "output"

- name: "Restarting and Enabling fail2ban"
  ansible.builtin.service:
    name: "fail2ban"
    state: "restarted"
    enabled: true

- name: "Restarting the SSH server"
  ansible.builtin.service:
    name: "ssh"
    state: "restarted"
    enabled: true
  failed_when: false

- name: "Restarting and Enabling docker"
  ansible.builtin.service:
    name: "docker"
    state: "restarted"
    enabled: true

- name: "Refresh ~/.bashrc"
  become: false
  ansible.builtin.shell: >-
    set -o pipefail && \
    source ~/.bashrc
  args:
    executable: "/usr/bin/bash"
  register: "source_output"
  changed_when: source_output.rc == 0

- name: "Restarting and Enabling keepalived"
  ansible.builtin.systemd:
    name: "keepalived"
    state: "restarted"
    enabled: true

- name: "Restart qemu-guest-agent"
  ansible.builtin.service:
    name: "qemu-guest-agent"
    state: "started"
    enabled: true
